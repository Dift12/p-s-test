:root{
    scroll-behavior: smooth;
    height: 100%;
    --main-text-accent:rebeccapurple;
    --badge-boder: 5px solid rgba(190,130,190);
    --badge-bg:rgba(150,40,150,0.7);
    --terminal: rgb(20,20,20,0.7);
    --terminal-border: 1px solid grey;
    --danger:red;
    --cursor-flicker: flick 0.7s infinite;
    }

*{
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}


@font-face {
    font-family: 'Quicksand Book';
    src: url('../fonts/QuicksandBook-Regular.woff2') format('woff2'),
        url('../fonts/QuicksandBook-Regular.woff') format('woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

body{
    background-color: rgb(10,10,15)

    background-attachment: fixed;
    position: relative;
    z-index: -3;

    -webkit-box-shadow: -1px 150vh 180px -200px rgba(10,10,15,1) inset;

    background-attachment:fixed;

}

body {
    background-image:
      linear-gradient(
        to bottom,
        transparent 99%,
        #1f0f2e),
      linear-gradient(
        to right, 
        rgb(10,10,15) 99%,
        #1f0f2e 100%);
    background-size:
      100px 100px,
      100px 100px;

  }

a{
    text-decoration: none;
}
    

nav{
    position: fixed;
    height: min-content;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    transition: 0.2s;
    padding: 5px 15px;
    gap: 15px;
    width: 100%;
    z-index: 1;
}
    
.command{
    padding:5px;
    border: none;
    background-color: transparent;
    text-transform: lowercase;
    color: white;
    transition: 0.2s;
    font-size: 1.3rem;
    font-weight: bold;
    font-family: 'Quicksand Book' ;
    width: 100%;
    text-align: start;
    }

.command::before{
    content: "_";
    color: var(--main-text-accent);
}

.command:hover{
   outline: var(--terminal-border);
}

.command:hover::before{
    content: "site: $ cat ./";
    color: var(--main-text-accent);
}

.command:hover::after{
    content: "|";
    animation: var(--cursor-flicker) ;
}

nav > a:not(.active){
    display: none;
}

nav > .active::before{
    content: "./";
}

nav:hover{
    a{
        display: block;
    }
    height:auto;
    background-color: var(--terminal);
}

.badge{
    font-size: clamp(2.2rem, 10vmin, 5rem);
    font-family: Arial;
    color: white;
    text-transform: lowercase;
    font-weight: bold;
    padding: 10px;
   /* border: var(--badge-boder);*/
   /* background-color: var(--badge-bg);*/
    background-color: rebeccapurple;
    width: max-content;
    margin: 15px 0px;
}

.badge::before{
    content: "$";
}

.badge::after{
    content: "|";
    animation: var(--cursor-flicker);
}

.small{
    font-size: clamp(1.6rem, 8vmin, 4.2rem);
    background-color: rebeccapurple;
}

/*If an element has a badge and small class then down add bg color to it,
this rule has higher specifity*/


.display{
    display: grid;
    grid-template-columns: repeat(3, minmax(250px, 1fr));
}

.card{
    
}

.contact-items{
    display: flex;
    gap: 20px;
    margin: 10px;
}

.contact-items i{
    font-size: 1.5rem;
    color: white;
}

.contact-items i:hover{
    font-size: 1.5rem;
    filter: drop-shadow(0px 0px 10px blue);
    color: blueviolet;
}

.wrapper{
    padding: 15px;
}

.blob-filter{
    filter: url("#goo");
    position: absolute;
    z-index: -1;
    width: 100%;
    top: 0;
    bottom: 0;
    height: 250vh;
    overflow: hidden; /*AVOID BLOBS STRETCHIN THE VIEWPORT*/
}

.lamp{
    filter: blur(40px);
}

.blob {
    position: absolute;
    top: 0;
    left: 0;
    fill: rgb(10,10,10);
    width: 50vmax;
    z-index: -1;
    animation: move 40s ease-in-out infinite;
    transform-origin: 50% 50%;
    filter: drop-shadow(0px 0px 50px rebeccapurple);
  }

  .blob svg{
    transform: scale(1.3);
}

  .blob-2 {
    position: absolute;
    top: 0;
    left: 0;
    fill: rgb(10,10,10);
    width: 10vmax;
    z-index: -1;
    animation:  move 60s ease-in-out infinite ;
    transform-origin: 50% 50%;
    filter: drop-shadow(0px 0px 40px rebeccapurple);
}

@keyframes move {
    0%   { transform: scale(1)   translate(10px, -30px); }
    38%  { transform: scale(0.8, 1) translate(80vw, 30vh) rotate(160deg); }
    40%  { transform: scale(0.8, 1) translate(80vw, 30vh) rotate(160deg); }
    78%  { transform: scale(1.3) translate(0vw, 50vh) rotate(-20deg); }
    80%  { transform: scale(1.3) translate(0vw, 50vh) rotate(-20deg); }
    100% { transform: scale(1)   translate(10px, -30px); }
  }

  @keyframes flick{
    0%{opacity: 0;}
    25%{opacity: 0;}
    50%{opacity: 0;}
    75%{opacity: 1;}
    100%{opacity: 1;}
  }
